#!/bin/bash

# Environment Setup Script Template
# Copy this file to setup-env.sh and fill in your values
# Usage: source setup-env.sh [dev|prod]
#
# IMPORTANT: When creating a Supabase project, save the database password!
# It's only shown once and you'll need it for SUPABASE_DB_PASSWORD below.

# Determine environment
ENVIRONMENT="${1:-dev}"
echo "Setting up environment: $ENVIRONMENT"

# === SUPABASE CONFIGURATION ===
# Get these from your Supabase project settings (Settings -> API)
# IMPORTANT: Save your database password when creating the project - it's only shown once!

if [ "$ENVIRONMENT" = "prod" ]; then
    # Production Supabase
    export SUPABASE_PROJECT_REF="YOUR_PROD_PROJECT_REF"  # e.g., "xyzcompanyorxyz"
    export SUPABASE_ANON_KEY="YOUR_PROD_ANON_KEY"
    export SUPABASE_SERVICE_ROLE_KEY="YOUR_PROD_SERVICE_ROLE_KEY"
    export SUPABASE_DB_PASSWORD="YOUR_PROD_DB_PASSWORD"  # Saved from project creation!
    export SUPABASE_ACCESS_TOKEN="YOUR_SUPABASE_ACCESS_TOKEN"  # From app.supabase.com/account/tokens
    export CLOUDFLARE_PROJECT_NAME="your-app-prod"
else
    # Development Supabase
    export SUPABASE_PROJECT_REF="YOUR_DEV_PROJECT_REF"  # e.g., "xyzcompanyorxyz"
    export SUPABASE_ANON_KEY="YOUR_DEV_ANON_KEY"
    export SUPABASE_SERVICE_ROLE_KEY="YOUR_DEV_SERVICE_ROLE_KEY"
    export SUPABASE_DB_PASSWORD="YOUR_DEV_DB_PASSWORD"  # Saved from project creation!
    export SUPABASE_ACCESS_TOKEN="YOUR_SUPABASE_ACCESS_TOKEN"  # From app.supabase.com/account/tokens
    export CLOUDFLARE_PROJECT_NAME="your-app-dev"
fi

# Derive Supabase URL from project ref
export SUPABASE_URL="https://${SUPABASE_PROJECT_REF}.supabase.co"

# === CLOUDFLARE CONFIGURATION ===
# Account ID: Found in Cloudflare dashboard right sidebar
# API Token: Create at https://dash.cloudflare.com/profile/api-tokens
#   - Use "Edit Cloudflare Workers" template
#   - Add permission: Account:Cloudflare Pages:Edit

export CLOUDFLARE_ACCOUNT_ID="YOUR_CLOUDFLARE_ACCOUNT_ID"
export CLOUDFLARE_API_TOKEN="YOUR_CLOUDFLARE_API_TOKEN"

# === OPENAI CONFIGURATION ===
# Required for LLM features - get from https://platform.openai.com/api-keys
# This template is opinionated: AI features are a core part of modern apps!

if [ "$ENVIRONMENT" = "prod" ]; then
    export OPENAI_API_KEY="YOUR_PROD_OPENAI_API_KEY"  # sk-...
else
    export OPENAI_API_KEY="YOUR_DEV_OPENAI_API_KEY"   # sk-...
fi

# === OPTIONAL: OTHER API KEYS ===
# Add any other service API keys here
# export STRIPE_API_KEY="sk_test_..."
# export SENDGRID_API_KEY="SG...."

# === VALIDATION ===
# Check that required variables are set
REQUIRED_VARS=(
    "SUPABASE_URL"
    "SUPABASE_ANON_KEY"
    "SUPABASE_PROJECT_REF"
    "CLOUDFLARE_ACCOUNT_ID"
    "CLOUDFLARE_API_TOKEN"
    "CLOUDFLARE_PROJECT_NAME"
    "OPENAI_API_KEY"
)

ALL_SET=true
for var in "${REQUIRED_VARS[@]}"; do
    # Use eval for shell compatibility (works in bash, zsh, sh)
    eval "value=\$$var"
    if [ -z "$value" ] || echo "$value" | grep -q "YOUR_"; then
        echo "❌ $var is not properly set"
        ALL_SET=false
    else
        echo "✅ $var is set"
    fi
done

if [ "$ALL_SET" = true ]; then
    echo ""
    echo "✅ Environment setup complete for: $ENVIRONMENT"
    echo ""
    echo "Supabase Project: $SUPABASE_PROJECT_REF"
    echo "Cloudflare Project: $CLOUDFLARE_PROJECT_NAME"
    echo ""
    echo "You can now run:"
    echo "  ./setup_database.sh  - Set up your database schema"
    echo "  ./deploy_backend.sh  - Deploy Supabase Edge Functions"
    echo "  ./deploy_frontend.sh - Deploy to Cloudflare Pages"
else
    echo ""
    echo "❌ Please update setup-env.sh with your actual values"
    echo ""
    echo "Get Supabase values from:"
    echo "  Settings → API: Project Ref, Anon Key, Service Role Key"
    echo "  Settings → Database: Database Password (saved from creation)"
    echo "  Account → Access Tokens: Access Token for deployments"
    echo ""
    echo "Get Cloudflare values from:"
    echo "  Account ID: Cloudflare dashboard sidebar"
    echo "  API Token: https://dash.cloudflare.com/profile/api-tokens"
    echo ""
    echo "Get OpenAI API key from:"
    echo "  https://platform.openai.com/api-keys"
fi

# Export environment name for scripts
export ENVIRONMENT

# === PROJECT SETUP HELPERS ===

# Link Supabase project (if CLI is installed)
if command -v supabase &> /dev/null && [ "$ALL_SET" = true ]; then
    echo ""
    echo "Linking Supabase project..."
    supabase link --project-ref "$SUPABASE_PROJECT_REF" --password "$SUPABASE_DB_PASSWORD" 2>&1 | grep -v "WARNING: Local config differs" || true
fi

# Generate env.js for frontend development
if [ "$ALL_SET" = true ]; then
    echo "Generating frontend/env.js..."
    cat > frontend/env.js <<EOF
// Environment configuration
// Auto-generated by setup-env.sh - DO NOT EDIT MANUALLY
window.SUPABASE_URL = '${SUPABASE_URL}';
window.SUPABASE_ANON_KEY = '${SUPABASE_ANON_KEY}';
window.ENVIRONMENT = '${ENVIRONMENT}';
EOF
    echo "✅ frontend/env.js created"
    
    # Set Supabase Edge Function secrets
    echo ""
    echo "Setting Edge Function secrets..."
    
    # Set OpenAI API key
    supabase secrets set OPENAI_API_KEY="$OPENAI_API_KEY" --project-ref "$SUPABASE_PROJECT_REF" 2>&1 | grep -v "would you like to" || true
    
    if [ $? -eq 0 ]; then
        echo "✅ OPENAI_API_KEY set in Edge Function secrets"
        echo "   Note: Deploy your functions to apply the secret"
    else
        echo "⚠️  Could not set OPENAI_API_KEY automatically"
        echo "   You can set it manually in the Supabase dashboard"
    fi
fi
